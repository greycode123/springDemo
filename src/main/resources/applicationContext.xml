<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/jms
       http://www.springframework.org/schema/jms/spring-jms-3.2.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <task:annotation-driven/>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:url="jdbc:mysql://localhost:3306/sampledb?useUnicode=true&amp;characterEncoding=UTF-8"
          p:username="root"
          p:password=""/>

    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation" value="classpath:sqlmap-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <context:component-scan base-package="com.smart.*"/>

    <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
    </bean>

    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="jsmConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="targetConnectionFactory"/>
    </bean>

    <!--这个是队列目的地-->
    <bean id="defaultJmsQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg>
            <value>defaultJmsQueue</value>
        </constructor-arg>
    </bean>

    <!--这个是队列目的地-->
    <bean id="mailJmsQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg>
            <value>mailJmsQueue</value>
        </constructor-arg>
    </bean>

    <!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
        <property name="connectionFactory" ref="jsmConnectionFactory"/>
        <property name="defaultDestinationName" value="defaultJmsQueue"/>
    </bean>

    <!-- 消息监听器 -->
    <!--<bean id="receiveJmsMessage" class="com.smart.jms.ReceiveJmsMessage"/>-->

    <bean id="receiveMailJmsMessage" class="com.smart.mail.ReceiveMailJmsMessage"/>

    <jms:listener-container connection-factory="jsmConnectionFactory">
        <jms:listener destination="mailJmsQueue" ref="receiveMailJmsMessage" method="processMailJmsMessage"/>
    </jms:listener-container>

    <!--    &lt;!&ndash; 消息监听容器 &ndash;&gt;
        <bean id="jmsContainer"
              class="org.springframework.jms.listener.DefaultMessageListenerContainer">
            <property name="connectionFactory" ref="jsmConnectionFactory" />
            <property name="destination" ref="defalueJmsQueue" />
            <property name="messageListener" ref="receiveJmsMessage"/>
        </bean>-->


    <bean id="ehcacheCacheManager" class="com.smart.common.cache.ehcache.EhcacheCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:ehcache.xml</value>
        </property>
    </bean>

    <bean id="spyMemcachedClient" class="com.smart.common.cache.memcached.SpyMemcachedClientFactoryBean"/>

    <bean id="spyMemcachedCacheManager" class="com.smart.common.cache.memcached.SpyMemcachedCacheManager">
        <property name="caches">
            <list>
                <bean class="com.smart.common.cache.memcached.SpyMemcachedCache"
                      p:name="configCache"
                      p:memcachedClient-ref="spyMemcachedClient"/>
                <bean class="com.smart.common.cache.memcached.SpyMemcachedCache"
                      p:name="menuCache"
                      p:memcachedClient-ref="spyMemcachedClient"/>
            </list>
        </property>
    </bean>

    <bean id="simpleCompositeCacheManager" name="cacheManager" class="com.smart.common.cache.composite.SimpleCompositeCacheManager">
        <property name="cacheManagers">
            <list>
                <ref local="ehcacheCacheManager"></ref>
                <ref local="spyMemcachedCacheManager"></ref>
            </list>
        </property>
    </bean>
</beans>